---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp-ca
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  isCA: true
  commonName: kcp-ca
  secretName: kcp-ca
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  issuerRef:
    name: kcp-pki
    kind: Issuer
    group: cert-manager.io
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp-requestheader-client-ca
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  isCA: true
  commonName: kcp-requestheader-client-ca
  secretName: kcp-requestheader-client-ca
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  issuerRef:
    name: kcp-pki
    kind: Issuer
    group: cert-manager.io
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp-server-client-ca
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  isCA: true
  commonName: kcp-server-client-ca
  secretName: kcp-server-client-ca
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  issuerRef:
    name: kcp-pki
    kind: Issuer
    group: cert-manager.io
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kcp-server-issuer
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  ca:
    secretName: kcp-ca
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kcp-server-client-issuer
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  ca:
    secretName: kcp-server-client-ca
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: kcp-requestheader-client-issuer
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  ca:
    secretName: kcp-requestheader-client-ca
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  secretName: kcp-cert
  duration: 8760h0m0s # 365d
  renewBefore: 360h0m0s # 15d
  {{- with .Values.certificates.subject }}
  subject:
    {{- toYaml . | nindent 4 }}
  {{- end}}
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  usages:
    - server auth
  dnsNames:
  {{- range .Values.certificates.dnsNames }}
  - {{ . }}
  {{- end }}
  issuerRef:
    name: kcp-server-issuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp-virtual-workspaces
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  secretName: kcp-virtual-workspaces-cert
  duration: 8760h0m0s # 365d
  renewBefore: 360h0m0s # 15d
  {{- with .Values.certificates.subject }}
  subject:
    {{- toYaml . | nindent 4 }}
  {{- end}}
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  usages:
    - server auth
  dnsNames:
  {{- range .Values.certificates.dnsNames }}
  - {{ . }}
  {{- end }}
  issuerRef:
    name: kcp-server-issuer
{{- if .Values.etcd.enabled }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: kcp-etcd-client
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  secretName: kcp-etcd-client
  duration: 8760h0m0s # 365d
  renewBefore: 360h0m0s # 15d
  commonName: {{ .Values.kcp.etcd.clientCertificate.commonName }}
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  usages:
    - client auth
  issuerRef:
    name: {{ .Values.kcp.etcd.clientCertificate.issuer }}
{{- end }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: logical-cluster-admin-client-cert-for-kubeconfig
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  secretName: logical-cluster-admin-client-cert-for-kubeconfig
  duration: 8760h0m0s # 365d
  renewBefore: 360h0m0s # 15d
  commonName: logical-cluster-admin
  subject:
    organizations:
      - "system:kcp:logical-cluster-admin"
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  usages:
    - client auth
  issuerRef:
    name: kcp-server-client-issuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: external-logical-cluster-admin-client-cert-for-kubeconfig
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  secretName: external-logical-cluster-admin-client-cert-for-kubeconfig
  duration: 8760h0m0s # 365d
  renewBefore: 360h0m0s # 15d
  commonName: external-logical-cluster-admin
  subject:
    organizations:
      - "system:kcp:external-logical-cluster-admin"
  privateKey:
    {{- toYaml .Values.certificates.privateKeys | nindent 4 }}
  usages:
    - client auth
  issuerRef:
    name: kcp-server-client-issuer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kcp
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.kcp.volumeSize }}
  {{ with .Values.kcp.volumeClassName -}}storageClassName: {{ . }}{{- end }}
{{- if .Values.audit.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kcp-audit-logs
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.audit.volumeSize }}
  {{ with .Values.audit.volumeClassName -}}storageClassName: {{ . }}{{- end }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: kcp
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  ports:
    - protocol: TCP
      name: kcp
      port: 6443
      targetPort: 6443
    - protocol: TCP
      name: virtual-workspaces
      port: 6444
      targetPort: 6444
  selector:
    {{- include "common.labels.selector" . | nindent 4 }}
    app.kubernetes.io/component: "server"
---
apiVersion: v1
kind: Service
metadata:
  name: kcp-internal
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  ports:
    - protocol: TCP
      name: kcp
      port: 443
      targetPort: 6443
    - protocol: TCP
      name: virtual-workspaces
      port: 444
      targetPort: 6444
  selector:
    {{- include "common.labels.selector" . | nindent 4 }}
    app.kubernetes.io/component: "server"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kcp
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: "server"
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "common.labels.selector" . | nindent 6 }}
      app.kubernetes.io/component: "server"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "common.labels" . | nindent 8 }}
        app.kubernetes.io/component: "server"
    spec:
      {{- with .Values.kcp.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.kcp.hostAliases.enabled }}
      hostAliases:
        {{- toYaml .Values.kcp.hostAliases.values | nindent 6 }}
      {{- end }}
      containers:
      - name: kcp
        image: {{ .Values.kcp.image }}:{{ .Values.kcp.tag }}
        imagePullPolicy: {{ .Values.kcp.pullPolicy }}
        ports:
        - containerPort: 6443
        {{- if .Values.kcp.profiling.enabled }}
        - containerPort: {{ .Values.kcp.profiling.port }}
          name: profiler
        {{- end}}
        command: ["/kcp", "start"]
        args:
        - --etcd-servers={{ .Values.kcp.etcd.serverAddress }}
        {{- if ne .Values.kcp.etcd.serverAddress "embedded" }}
        - --etcd-keyfile=/etc/etcd/tls/server/tls.key
        - --etcd-certfile=/etc/etcd/tls/server/tls.crt
        - --etcd-cafile=/etc/etcd/tls/server/ca.crt
        {{- end }}
        - --client-ca-file=/etc/kcp/tls/server-client-ca/tls.crt
        - --tls-private-key-file=/etc/kcp/tls/server/tls.key
        - --tls-cert-file=/etc/kcp/tls/server/tls.crt
        - --service-account-key-file=/etc/kcp/tls/service-account/tls.key
        - --service-account-private-key-file=/etc/kcp/tls/service-account/tls.key
        - --root-ca-file=/etc/kcp/tls/service-account/ca.crt
        - --enable-home-workspaces={{ .Values.kcp.homeWorkspaces.enabled }}
        {{- if .Values.kcp.logicalClusterAdminFlag }}
        - --logical-cluster-admin-kubeconfig=/etc/kcp/logical-cluster-admin/kubeconfig/logical-cluster-admin.kubeconfig
        {{- end }}
        {{- if .Values.kcp.externalLogicalClusterAdminFlag }}
        - --external-logical-cluster-admin-kubeconfig=/etc/kcp/external-logical-cluster-admin/kubeconfig/external-logical-cluster-admin.kubeconfig
        {{- end }}
        - --requestheader-client-ca-file=/etc/kcp/tls/requestheader-client-ca/tls.crt
        - --requestheader-username-headers=X-Remote-User
        - --requestheader-group-headers=X-Remote-Group
        - --root-directory=/etc/kcp/config
        - --shard-virtual-workspace-ca-file=/etc/kcp/tls/kcp-virtual-workspaces/ca.crt
        - --shard-base-url=https://kcp:6443
        - --shard-external-url=https://$(EXTERNAL_HOSTNAME):$(EXTERNAL_PORT)
        - --external-hostname=$(EXTERNAL_HOSTNAME):$(EXTERNAL_PORT)
        {{- if .Values.oidc.enabled }}
        - --oidc-issuer-url={{ .Values.oidc.issuerUrl }}
        - --oidc-client-id={{ .Values.oidc.clientId }}
        - --oidc-groups-claim={{ .Values.oidc.groupClaim }}
        - --oidc-username-claim={{ .Values.oidc.usernameClaim }}
        - '--oidc-username-prefix={{ .Values.oidc.usernamePrefix }}'
        - '--oidc-groups-prefix={{ .Values.oidc.groupsPrefix }}'
        {{- if .Values.oidc.caSecretName }}
        - --oidc-ca-file=/etc/kcp/tls/oidc/ca.crt
        {{- end }}
        {{- end }}
        {{- if .Values.kcp.tokenAuth.enabled }}
        - --token-auth-file=/etc/kcp/token-auth/{{ .Values.kcp.tokenAuth.fileName }}
        {{- end }}
        - --v={{ .Values.kcp.v }}
        - --logging-format=json
        {{- if .Values.audit.enabled }}
        - --audit-log-maxage={{ .Values.audit.log.maxAge }}
        - --audit-log-maxbackup={{ .Values.audit.log.maxBackup }}
        - --audit-log-maxsize={{ .Values.audit.log.maxSize }}
        - --audit-log-path={{ .Values.audit.log.dir }}/kcp.log
        - --audit-policy-file={{ .Values.audit.policy.dir }}/{{ .Values.audit.policy.fileName }}
        - --audit-log-compress
        - --audit-log-format=json
        {{- end }}
        {{- if .Values.kcp.profiling.enabled }}
        - --profiler-address=0.0.0.0:{{- .Values.kcp.profiling.port -}}
        {{- end }}
        {{- range .Values.kcp.extraFlags }}
        {{ . }}
        {{- end }}
        env:
        - name: EXTERNAL_HOSTNAME
          value: {{ required "A valid external hostname is required" .Values.externalHostname }}
        - name: EXTERNAL_PORT
          value: "{{ if eq .Values.kcpFrontProxy.service.type "LoadBalancer" }}8443{{ else }}443{{- end }}"
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: requests.memory
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: livez
            port: 6443
            scheme: HTTPS
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        startupProbe:
          httpGet:
            path: readyz
            port: 6443
            scheme: HTTPS
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 36
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: readyz
            port: 6443
            scheme: HTTPS
        {{- with .Values.kcp.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - name: kcp-front-proxy-cert
          mountPath: /etc/kcp-front-proxy/tls
        {{- if ne .Values.kcp.etcd.serverAddress "embedded" }}
        - name: etcd-certs
          mountPath: /etc/etcd/tls/server
        {{- end }}
        - name: kcp-certs
          mountPath: /etc/kcp/tls/server
        - name: kcp-server-client-ca
          mountPath: /etc/kcp/tls/server-client-ca
        - name: kcp-requestheader-client-ca
          mountPath: /etc/kcp/tls/requestheader-client-ca
        - name: kcp-service-account-cert
          mountPath: /etc/kcp/tls/service-account
        - name: kcp-virtual-workspaces-cert
          mountPath: /etc/kcp/tls/kcp-virtual-workspaces
        - name: kubeconfig
          mountPath: /etc/kcp/config
        {{- if .Values.kcp.tokenAuth.enabled }}
        - name: kcp-token-auth-file
          mountPath: /etc/kcp/token-auth
        {{- end}}
        - name: logical-cluster-admin-client-cert-for-kubeconfig
          mountPath: /etc/kcp/logical-cluster-admin/client-cert-for-kubeconfig
        - name: logical-cluster-admin-kubeconfig
          mountPath: /etc/kcp/logical-cluster-admin/kubeconfig
        - name: external-logical-cluster-admin-client-cert-for-kubeconfig
          mountPath: /etc/kcp/external-logical-cluster-admin/client-cert-for-kubeconfig
        - name: external-logical-cluster-admin-kubeconfig
          mountPath: /etc/kcp/external-logical-cluster-admin/kubeconfig
        {{- if .Values.audit.enabled }}
        - name: audit-log
          mountPath: {{ .Values.audit.log.dir }}
        - name: audit-policy
          mountPath: {{ .Values.audit.policy.dir }}
        {{- end }}
        {{- if .Values.oidc.enabled }}
        {{- if .Values.oidc.caSecretName }}
        - name: oidc-ca
          mountPath: /etc/kcp/tls/oidc
        {{- end }}
        {{- end }}
      volumes:
      - name: kcp-front-proxy-cert
        secret:
          secretName: kcp-front-proxy-cert
      {{- if ne .Values.kcp.etcd.serverAddress "embedded" }}
      - name: etcd-certs
        secret:
          secretName: kcp-etcd-client
      {{- end }}
      - name: kcp-certs
        secret:
          secretName: kcp-cert
      - name: kcp-virtual-workspaces-cert
        secret:
          secretName: kcp-virtual-workspaces-cert
          items:
          - key: ca.crt
            path: ca.crt
      - name: kcp-requestheader-client-ca
        secret:
          secretName: kcp-requestheader-client-ca
          items:
          - key: tls.crt
            path: tls.crt
      - name: kcp-server-client-ca
        secret:
          secretName: kcp-server-client-ca
          items:
          - key: tls.crt
            path: tls.crt
      - name: logical-cluster-admin-client-cert-for-kubeconfig
        secret:
          secretName: logical-cluster-admin-client-cert-for-kubeconfig
          items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
      - name: kcp-service-account-cert
        secret:
          secretName: kcp-service-account-cert
          items:
            - key: ca.crt
              path: ca.crt
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
      - name: logical-cluster-admin-kubeconfig
        secret:
          secretName: logical-cluster-admin-kubeconfig
          items:
            - key: kubeconfig
              path: logical-cluster-admin.kubeconfig
      - name: external-logical-cluster-admin-client-cert-for-kubeconfig
        secret:
          secretName: external-logical-cluster-admin-client-cert-for-kubeconfig
          items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
      - name: external-logical-cluster-admin-kubeconfig
        secret:
          secretName: external-logical-cluster-admin-kubeconfig
          items:
            - key: kubeconfig
              path: external-logical-cluster-admin.kubeconfig
      - name: kubeconfig
        persistentVolumeClaim:
          claimName: kcp
      {{- if .Values.audit.enabled }}
      - name: audit-policy
        configMap:
          name: audit-policy
      - name: audit-log
        persistentVolumeClaim:
          claimName: kcp-audit-logs
      {{- end }}
      {{- if .Values.kcp.tokenAuth.enabled }}
      - name: kcp-token-auth-file
        secret:
          secretName: kcp-token-auth-file
      {{- end }}
      {{- if .Values.oidc.enabled }}
      {{- if .Values.oidc.caSecretName }}
      - name: oidc-ca
        secret:
          secretName: {{.Values.oidc.caSecretName }}
      {{- end }}
      {{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: audit-policy
data:
  {{ .Values.audit.policy.fileName }}: |
    {{- .Values.audit.policy.config | nindent 4 }}

{{- if .Values.kcp.tokenAuth.enabled }}
---
apiVersion: v1
kind: Secret
metadata:
  name: kcp-token-auth-file
stringData:
  {{ .Values.kcp.tokenAuth.fileName }}: |
    {{- .Values.kcp.tokenAuth.config | nindent 4 }}
{{- end}}
