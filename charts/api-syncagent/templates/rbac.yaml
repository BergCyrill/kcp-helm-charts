{{- if .Values.rbac.create }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: '{{ template "name" . }}:leaderelection'
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: '{{ template "name" . }}:leaderelection'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: '{{ template "name" . }}:leaderelection'
subjects:
  - kind: ServiceAccount
    name: '{{ template "name" . }}'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: '{{ template "name" . }}:{{ .Release.Namespace }}:services'
  namespace: kdp
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
  - apiGroups:
      - services.syncagent.kcp.io
    resources:
      - publishedresources
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - services.syncagent.kcp.io
    resources:
      - publishedresources/status
    verbs:
      - create
      - get
      - update
      - patch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: '{{ template "name" . }}:{{ .Release.Namespace }}:services'
  namespace: kdp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: '{{ template "name" . }}:{{ .Release.Namespace }}:services'
subjects:
  - kind: ServiceAccount
    name: '{{ template "name" . }}'
    namespace: '{{ .Release.Namespace }}'
{{- end }}

{{ if .Values.rbac.createClusterRole }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: '{{ template "name" . }}:{{ .Release.Namespace }}'
  namespace: kdp
rules: {{ .Values.rbac.rules | toYaml | nindent 2 }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: '{{ template "name" . }}:{{ .Release.Namespace }}'
  namespace: kdp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: '{{ template "name" . }}:{{ .Release.Namespace }}'
subjects:
  - kind: ServiceAccount
    name: '{{ template "name" . }}'
    namespace: '{{ .Release.Namespace }}'
{{ end }}
